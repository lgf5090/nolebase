name: 构建并部署到 dash.deno.dev

on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch:

env:
  STORE_PATH: ''

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: 构建和部署
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: 签出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 安装 Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: 安装 Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: 安装 pnpm
        uses: pnpm/action-setup@v2
        with:
          run_install: false

      - name: 获取 pnpm store 目录
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 配置 pnpm 缓存
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      - name: 安装思源黑体
        run: |
          mkdir -p ~/.local/share/fonts
          cp public/source-han-sans.ttf ~/.local/share/fonts/source-han-sans.ttf

      - name: 构建
        run: |
          export NODE_OPTIONS="--max-old-space-size=16384"
          pnpm docs:build

      - name: 上传到 Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "nolebase"
          entrypoint: "https://deno.land/std@0.217.0/http/file_server.ts"
          root: ".vitepress/dist"
